1. What are pipes in Angular?Pre-defined Pipes
Pipes are a type of preprocessors or transformers that transform a given value and display it on the page after transformation. Pipes are often used in the templates to present some data to the user in a certain way.

datepipe, uppercasepipe, titlecasepipe, decimalpipe, slicepipe,percentpipe

eg., {{ 123456 | currency:'INR' }}	â‚¹123,456.00.

2. What is Gitbash?
Git Bash is a command line through which users can use Git features. It emulates a bash environment on Windows and lets the user use most of the standard Unix commands. It is for the users that are familiar with the bash terminal of Unix operating systems.


3.Check the git commands by implement the following requirements:   

			1.   Environment Setup:		
					a . local git install
					b.  create github account			
			2.   Create local repository    
			4.   Add the required files
						a.  emp.component.ts
						b.  emp.component.html
						c.  emp.component.css
						
			5.   Commit to into local repository
			6.   Check  status in every phase and observe the details



jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo
$ git status
fatal: not a git repository (or any of the parent directories): .git

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo
$ git init
Initialized empty Git repository in C:/Users/jatinkumar7/Desktop/Git_Angular_Demo/.git/

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git add emp.component.ts
fatal: pathspec 'emp.component.ts' did not match any files

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ touch emp.component.ts

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ touch emp.component.html

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ touch emp.component.css

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        emp.component.css
        emp.component.html
        emp.component.ts

nothing added to commit but untracked files present (use "git add" to track)

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git add emp.component.ts

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   emp.component.ts

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        emp.component.css
        emp.component.html


jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git add -A

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   emp.component.css
        new file:   emp.component.html
        new file:   emp.component.ts


jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git commit -m "This is my first commit"
[master (root-commit) 5f7f41c] This is my first commit
 Committer: Kumar <jatinkumar7@deloitte.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 emp.component.css
 create mode 100644 emp.component.html
 create mode 100644 emp.component.ts

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$ git status
On branch master
nothing to commit, working tree clean

jatinkumar7@USHYDJATINKUMA2 MINGW64 ~/Desktop/Git_Angular_Demo (master)
$

4.   How to use DecimalPipe and PercentPipe in Angular?  Check with an example?
decimal pipe
{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}
{{num1 | number:'3.2-5'}} 
minIntegerDigits = 3
minFractionDigits = 2
maxFractionDigits = 5

percent pipe
{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}
{{num1 | percent:'2.2-5'}} 
minIntegerDigits = 2
minFractionDigits = 2
maxFractionDigits = 5
if number is 1 then it gives 100%
